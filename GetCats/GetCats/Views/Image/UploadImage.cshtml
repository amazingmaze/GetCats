
@model GetCats.Models.ViewModels.ImageAddViewModel

@{
    ViewBag.Title = "Upload image";
}

@using (Html.BeginForm("UploadImage", "Image", FormMethod.Post,
                                        new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <h2>@ViewBag.Title.</h2>
    <div class="form-horizontal box">
        <div class="col-md-12">
            <h4>Add new image to store library</h4>
            <hr/>
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.File, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    <input type="file" name="file" id="file" style="width: 100%;"/>
                    @Html.ValidationMessageFor(model => model.File, "", new {@class = "text-danger"})
                </div>
            </div>


            <div class="form-group">
                <label class="control-label col-md-2"> Low resolution: </label>
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.LowRes.Resolution, new { @Value = "Low" })
                    @Html.EditorFor(model => model.LowRes.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LowRes.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> High resolution: </label>
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.HighRes.Resolution, new { @Value = "High" })
                    @Html.EditorFor(model => model.HighRes.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HighRes.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Max resolution: </label>
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.MaxRes.Resolution, new { @Value = "Max" })
                    @Html.EditorFor(model => model.MaxRes.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaxRes.Price, "", new { @class = "text-danger" })
                </div>
            </div>           

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default"/>
                </div>
            </div>
            <div>
                @Html.ActionLink("Back to List", "Index", "Home")
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
